[project]
name = "coding-agent-mvp"
version = "0.1.0"
description = "AI coding assistant with GitHub OAuth integration and PR review automation"
requires-python = ">=3.11"
dependencies = [
    "strands-agents>=1.0.0",
    "bedrock-agentcore>=0.1.0",
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "PyGithub>=2.1.0",
    "boto3>=1.34.0",
    "structlog>=23.2.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "UP"]
ignore = []

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
asyncio_mode = "auto"

# Modern Python scripts (like npm scripts)
[tool.hatch.envs.default.scripts]
# Setup & Configuration
setup-github = "python -m src.auth.setup_provider"

# Development Server
dev = "env AWS_PROFILE=mingfang uvicorn src.main:app --reload --host 0.0.0.0 --port 8000"
start = "env AWS_PROFILE=mingfang uvicorn src.main:app --host 0.0.0.0 --port 8000"

# Testing
test = "pytest tests/ -v"
test-cov = "pytest tests/ --cov=src --cov-report=term-missing"
test-watch = "pytest-watch tests/ -v"

# Code Quality
lint = "ruff check src/ tests/"
format = "ruff format src/ tests/"
typecheck = "mypy src/"
quality = ["lint", "typecheck", "test"]

# Health Check
health = "curl -s http://localhost:8000/health | python -m json.tool"
